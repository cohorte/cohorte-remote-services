Manifest-Version: 1.0
Created-By: iPOJO 1.11.0
Import-Package: org.apache.felix.ipojo;version="[1.11.0,2.0.0)", org.a
 pache.felix.ipojo.architecture;version="[1.11.0,2.0.0)", org.osgi.ser
 vice.cm;version=1.2, org.osgi.service.log;version=1.3
iPOJO-Components: instance { $name="cohorte-remote-dispatcher-servlet"
  $component="cohorte-remote-dispatcher-servlet-factory" }component { 
 $name="cohorte-remote-dispatcher-servlet-factory" $classname="org.coh
 orte.remote.dispatcher.servlet.ServletWrapper" provides { $specificat
 ions="{org.cohorte.remote.pelix.IDispatcherServlet}" controller { $fi
 eld="pServiceController" }}requires { $field="pDispatcher" }requires 
 { $field="pHttpService" $filter="(org.osgi.service.http.port=*)" $id=
 "http.service" callback { $method="bindHttpService" $type="bind" }}re
 quires { $field="pLogger" }requires { $field="pRegistry" }properties 
 { property { $name="servlet.path" $field="pServletPath" $value="/peli
 x-dispatcher" }}callback { $transition="invalidate" $method="invalida
 te" }callback { $transition="validate" $method="validate" }manipulati
 on { $classname="org.cohorte.remote.dispatcher.servlet.ServletWrapper
 " interface { $name="org.cohorte.remote.pelix.IDispatcherServlet" }fi
 eld { $name="pDispatcher" $type="org.cohorte.remote.pelix.IExportsDis
 patcher" }field { $name="pHttpPort" $type="int" }field { $name="pHttp
 Service" $type="org.osgi.service.http.HttpService" }field { $name="pL
 ogger" $type="org.osgi.service.log.LogService" }field { $name="pRegis
 try" $type="org.cohorte.remote.pelix.IImportsRegistry" }field { $name
 ="pServiceController" $type="boolean" }field { $name="pServlet" $type
 ="org.cohorte.remote.dispatcher.servlet.RegistryServlet" }field { $na
 me="pServletPath" $type="java.lang.String" }method { $name="bindHttpS
 ervice" $arguments="{org.osgi.service.http.HttpService,java.util.Map}
 " $names="{aHttpService,aServiceProperties}" }method { $name="filterP
 roperties" $return="java.util.Map" $arguments="{java.lang.String,java
 .util.Map}" $names="{aFrameworkUID,aProperties}" }method { $name="get
 Path" $return="java.lang.String" }method { $name="getPort" $return="i
 nt" }method { $name="invalidate" }method { $name="sendDiscovered" $ar
 guments="{java.lang.String,int,java.lang.String}" $names="{aHost,aPor
 t,aPath}" }method { $name="validate" }}}

